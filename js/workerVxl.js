"use strict";(self.webpackChunkra2ts_client=self.webpackChunkra2ts_client||[]).push([[966],{514:()=>{importScripts("../js/three.min.js?v=0.94")},870:(t,e,i)=>{i.r(e),i.d(e,{generateVxlGeometry:()=>g}),i(514);class r{constructor(t,e,i=r.LITTLE_ENDIAN){this.endianness=i,this.position=0,this._dynamicSize=!0,this._byteLength=0,this.failurePosition=0,this._byteOffset=e||0,t instanceof ArrayBuffer?this.buffer=t:"object"==typeof t?(this.dataView=t,e&&(this._byteOffset+=e)):this.buffer=new ArrayBuffer(t||1)}get dynamicSize(){return this._dynamicSize}set dynamicSize(t){t||this._trimAlloc(),this._dynamicSize=t}get byteLength(){return this._byteLength-this._byteOffset}get buffer(){if(this._trimAlloc(),!this._buffer)throw new Error;return this._buffer}set buffer(t){this._buffer=t,this._dataView=new DataView(this._buffer,this._byteOffset),this._byteLength=this._buffer.byteLength}get byteOffset(){return this._byteOffset}set byteOffset(t){this._byteOffset=t,this._buffer&&(this._dataView=new DataView(this._buffer,this._byteOffset),this._byteLength=this._buffer.byteLength)}get dataView(){if(!this._dataView)throw new Error;return this._dataView}set dataView(t){this._byteOffset=t.byteOffset,this._buffer=t.buffer,this._dataView=new DataView(this._buffer,this._byteOffset),this._byteLength=this._byteOffset+t.byteLength}bigEndian(){return this.endianness=r.BIG_ENDIAN,this}_realloc(t){if(!this._dynamicSize)return;const e=this._byteOffset+this.position+t;if(!this._buffer)throw new Error;let i=this._buffer.byteLength;if(e<=i)return void(e>this._byteLength&&(this._byteLength=e));for(i<1&&(i=1);e>i;)i*=2;const r=new ArrayBuffer(i),n=new Uint8Array(this._buffer);new Uint8Array(r,0,n.length).set(n),this.buffer=r,this._byteLength=e}_trimAlloc(){if(!this._buffer)throw new Error;if(this._byteLength===this._buffer.byteLength)return;const t=new ArrayBuffer(this._byteLength),e=new Uint8Array(t),i=new Uint8Array(this._buffer,0,e.length);e.set(i),this.buffer=t}seek(t){const e=Math.max(0,Math.min(this.byteLength,t));this.position=isNaN(e)||!isFinite(e)?0:e}isEof(){return this.position>=this.byteLength}mapInt32Array(t,e){if(this._realloc(4*t),!this._buffer)throw new Error;const i=new Int32Array(this._buffer,this.byteOffset+this.position,t);return r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=4*t,i}mapInt16Array(t,e){if(this._realloc(2*t),!this._buffer)throw new Error;const i=new Int16Array(this._buffer,this.byteOffset+this.position,t);return r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=2*t,i}mapInt8Array(t){if(this._realloc(t),!this._buffer)throw new Error;const e=new Int8Array(this._buffer,this.byteOffset+this.position,t);return this.position+=t,e}mapUint32Array(t,e){if(this._realloc(4*t),!this._buffer)throw new Error;const i=new Uint32Array(this._buffer,this.byteOffset+this.position,t);return r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=4*t,i}mapUint16Array(t,e){if(this._realloc(2*t),!this._buffer)throw new Error;const i=new Uint16Array(this._buffer,this.byteOffset+this.position,t);return r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=2*t,i}mapUint8Array(t){if(this._realloc(t),!this._buffer)throw new Error;const e=new Uint8Array(this._buffer,this.byteOffset+this.position,t);return this.position+=t,e}mapFloat64Array(t,e){if(this._realloc(8*t),!this._buffer)throw new Error;const i=new Float64Array(this._buffer,this.byteOffset+this.position,t);return r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=8*t,i}mapFloat32Array(t,e){if(this._realloc(4*t),!this._buffer)throw new Error;const i=new Float32Array(this._buffer,this.byteOffset+this.position,t);return r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=4*t,i}readInt32Array(t,e){t=void 0===t?this.byteLength-this.position/4:t;const i=new Int32Array(t);return r.memcpy(i.buffer,0,this.buffer,this.byteOffset+this.position,t*i.BYTES_PER_ELEMENT),r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=i.byteLength,i}readInt16Array(t,e){t=void 0===t?this.byteLength-this.position/2:t;const i=new Int16Array(t);return r.memcpy(i.buffer,0,this.buffer,this.byteOffset+this.position,t*i.BYTES_PER_ELEMENT),r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=i.byteLength,i}readInt8Array(t){t=void 0===t?this.byteLength-this.position:t;const e=new Int8Array(t);return r.memcpy(e.buffer,0,this.buffer,this.byteOffset+this.position,t*e.BYTES_PER_ELEMENT),this.position+=e.byteLength,e}readUint32Array(t,e){t=void 0===t?this.byteLength-this.position/4:t;const i=new Uint32Array(t);return r.memcpy(i.buffer,0,this.buffer,this.byteOffset+this.position,t*i.BYTES_PER_ELEMENT),r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=i.byteLength,i}readUint16Array(t,e){t=void 0===t?this.byteLength-this.position/2:t;const i=new Uint16Array(t);return r.memcpy(i.buffer,0,this.buffer,this.byteOffset+this.position,t*i.BYTES_PER_ELEMENT),r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=i.byteLength,i}readUint8Array(t){t=void 0===t?this.byteLength-this.position:t;const e=new Uint8Array(t);return r.memcpy(e.buffer,0,this.buffer,this.byteOffset+this.position,t*e.BYTES_PER_ELEMENT),this.position+=e.byteLength,e}readFloat64Array(t,e){t=void 0===t?this.byteLength-this.position/8:t;const i=new Float64Array(t);return r.memcpy(i.buffer,0,this.buffer,this.byteOffset+this.position,t*i.BYTES_PER_ELEMENT),r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=i.byteLength,i}readFloat32Array(t,e){t=void 0===t?this.byteLength-this.position/4:t;const i=new Float32Array(t);return r.memcpy(i.buffer,0,this.buffer,this.byteOffset+this.position,t*i.BYTES_PER_ELEMENT),r.arrayToNative(i,void 0===e?this.endianness:e),this.position+=i.byteLength,i}writeInt32Array(t,e){if(this._realloc(4*t.length),t instanceof Int32Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapInt32Array(t.length,e)}else for(let i=0;i<t.length;i++)this.writeInt32(t[i],e);return this}writeInt16Array(t,e){if(this._realloc(2*t.length),t instanceof Int16Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapInt16Array(t.length,e)}else for(let i=0;i<t.length;i++)this.writeInt16(t[i],e);return this}writeInt8Array(t){if(this._realloc(t.length),t instanceof Int8Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapInt8Array(t.length)}else for(let e=0;e<t.length;e++)this.writeInt8(t[e]);return this}writeUint32Array(t,e){if(this._realloc(4*t.length),t instanceof Uint32Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapUint32Array(t.length,e)}else for(let i=0;i<t.length;i++)this.writeUint32(t[i],e);return this}writeUint16Array(t,e){if(this._realloc(2*t.length),t instanceof Uint16Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapUint16Array(t.length,e)}else for(let i=0;i<t.length;i++)this.writeUint16(t[i],e);return this}writeUint8Array(t){if(this._realloc(t.length),t instanceof Uint8Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapUint8Array(t.length)}else for(let e=0;e<t.length;e++)this.writeUint8(t[e]);return this}writeFloat64Array(t,e){if(this._realloc(8*t.length),t instanceof Float64Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapFloat64Array(t.length,e)}else for(let i=0;i<t.length;i++)this.writeFloat64(t[i],e);return this}writeFloat32Array(t,e){if(this._realloc(4*t.length),t instanceof Float32Array&&(this.byteOffset+this.position)%t.BYTES_PER_ELEMENT==0){if(!this._buffer)throw new Error;r.memcpy(this._buffer,this.byteOffset+this.position,t.buffer,t.byteOffset,t.byteLength),this.mapFloat32Array(t.length,e)}else for(let i=0;i<t.length;i++)this.writeFloat32(t[i],e);return this}readInt32(t){if(!this._dataView)throw new Error;const e=this._dataView.getInt32(this.position,void 0===t?this.endianness:t);return this.position+=4,e}readInt16(t){if(!this._dataView)throw new Error;const e=this._dataView.getInt16(this.position,void 0===t?this.endianness:t);return this.position+=2,e}readInt8(){if(!this._dataView)throw new Error;const t=this._dataView.getInt8(this.position);return this.position+=1,t}readUint32(t){if(!this._dataView)throw new Error;const e=this._dataView.getUint32(this.position,void 0===t?this.endianness:t);return this.position+=4,e}readUint16(t){if(!this._dataView)throw new Error;const e=this._dataView.getUint16(this.position,void 0===t?this.endianness:t);return this.position+=2,e}readUint8(){if(!this._dataView)throw new Error;const t=this._dataView.getUint8(this.position);return this.position+=1,t}readFloat32(t){if(!this._dataView)throw new Error;const e=this._dataView.getFloat32(this.position,void 0===t?this.endianness:t);return this.position+=4,e}readFloat64(t){if(!this._dataView)throw new Error;const e=this._dataView.getFloat64(this.position,void 0===t?this.endianness:t);return this.position+=8,e}writeInt32(t,e){if(this._realloc(4),!this._dataView)throw new Error;return this._dataView.setInt32(this.position,t,void 0===e?this.endianness:e),this.position+=4,this}writeInt16(t,e){if(this._realloc(2),!this._dataView)throw new Error;return this._dataView.setInt16(this.position,t,void 0===e?this.endianness:e),this.position+=2,this}writeInt8(t){if(this._realloc(1),!this._dataView)throw new Error;return this._dataView.setInt8(this.position,t),this.position+=1,this}writeUint32(t,e){if(this._realloc(4),!this._dataView)throw new Error;return this._dataView.setUint32(this.position,t,void 0===e?this.endianness:e),this.position+=4,this}writeUint16(t,e){if(this._realloc(2),!this._dataView)throw new Error;return this._dataView.setUint16(this.position,t,void 0===e?this.endianness:e),this.position+=2,this}writeUint8(t){if(this._realloc(1),!this._dataView)throw new Error;return this._dataView.setUint8(this.position,t),this.position+=1,this}writeFloat32(t,e){if(this._realloc(4),!this._dataView)throw new Error;return this._dataView.setFloat32(this.position,t,void 0===e?this.endianness:e),this.position+=4,this}writeFloat64(t,e){if(this._realloc(8),!this._dataView)throw new Error;return this._dataView.setFloat64(this.position,t,void 0===e?this.endianness:e),this.position+=8,this}static memcpy(t,e,i,r,n){const s=new Uint8Array(t,e,n),a=new Uint8Array(i,r,n);s.set(a)}static arrayToNative(t,e){return e===this.endianness?t:this.flipArrayEndianness(t)}static nativeToEndian(t,e){return this.endianness===e?t:this.flipArrayEndianness(t)}static flipArrayEndianness(t){const e=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);for(let i=0;i<t.byteLength;i+=t.BYTES_PER_ELEMENT)for(let r=i+t.BYTES_PER_ELEMENT-1,n=i;r>n;r--,n++){const t=e[n];e[n]=e[r],e[r]=t}return t}static createStringFromArray(t){const e=[];for(let i=0;i<t.length;i+=32768)e.push(String.fromCharCode.apply(void 0,t.subarray(i,i+32768)));return e.join("")}readStruct(t){const e={};let i,r;const n=this.position;for(let s=0;s<t.length;s+=2){if(i=t[s+1],r=this.readType(i,e),void 0===r)return 0===this.failurePosition&&(this.failurePosition=this.position),void(this.position=n);e[t[s]]=r}return e}readUCS2String(t,e){return r.createStringFromArray(this.readUint16Array(t,e))}writeUCS2String(t,e,i){void 0===i&&(i=t.length);let r=0;for(;r<t.length&&r<i;r++)this.writeUint16(t.charCodeAt(r),e);for(;r<i;r++)this.writeUint16(0);return this}readString(t,e){return void 0===e||"ASCII"===e?r.createStringFromArray(this.mapUint8Array(void 0===t?this.byteLength-this.position:t)):(new TextDecoder).decode(this.mapUint8Array(t))}writeString(t,e,i){if(void 0===e||"ASCII"===e)if(void 0!==i){let e;const r=Math.min(t.length,i);for(e=0;e<r;e++)this.writeUint8(t.charCodeAt(e));for(;e<i;e++)this.writeUint8(0)}else for(let r=0;r<t.length;r++)this.writeUint8(t.charCodeAt(r));else this.writeUint8Array((new TextEncoder).encode(t.substring(0,i)));return this}writeUtf8WithLen(t){const e=(new TextEncoder).encode(t);return this.writeUint16(e.length).writeUint8Array(e)}readUtf8WithLen(){const t=this.readUint16();return(new TextDecoder).decode(this.mapUint8Array(t))}readCString(t){const e=this.byteLength-this.position;if(!this._buffer)throw new Error;const i=new Uint8Array(this._buffer,this._byteOffset+this.position);let n=e;void 0!==t&&(n=Math.min(t,e));let s=0;for(;s<n&&0!==i[s];s++);const a=r.createStringFromArray(this.mapUint8Array(s));return void 0!==t?this.position+=n-s:s!==e&&(this.position+=1),a}writeCString(t,e){if(void 0!==e){let i;const r=Math.min(t.length,e);for(i=0;i<r;i++)this.writeUint8(t.charCodeAt(i));for(;i<e;i++)this.writeUint8(0)}else{for(let e=0;e<t.length;e++)this.writeUint8(t.charCodeAt(e));this.writeUint8(0)}return this}readType(t,e){if("function"==typeof t)return t(this,e);if(!("object"!=typeof t||t instanceof Array))return t.get(this,e);if(t instanceof Array&&3!==t.length)return this.readStruct(t);let i,n,s="ASCII";const a=this.position;if("string"==typeof t&&/:/.test(t)){const i=t.split(":");t=i[0];const r=i[1];n=parseInt(void 0!==e[r]?e[r]:r,10)}if("string"==typeof t&&/,/.test(t)){const e=t.split(",");t=e[0],s=e[1]}switch(n=n||0,t){case"uint8":i=this.readUint8();break;case"int8":i=this.readInt8();break;case"uint16":i=this.readUint16(this.endianness);break;case"int16":i=this.readInt16(this.endianness);break;case"uint32":i=this.readUint32(this.endianness);break;case"int32":i=this.readInt32(this.endianness);break;case"float32":i=this.readFloat32(this.endianness);break;case"float64":i=this.readFloat64(this.endianness);break;case"uint16be":i=this.readUint16(r.BIG_ENDIAN);break;case"int16be":i=this.readInt16(r.BIG_ENDIAN);break;case"uint32be":i=this.readUint32(r.BIG_ENDIAN);break;case"int32be":i=this.readInt32(r.BIG_ENDIAN);break;case"float32be":i=this.readFloat32(r.BIG_ENDIAN);break;case"float64be":i=this.readFloat64(r.BIG_ENDIAN);break;case"uint16le":i=this.readUint16(r.LITTLE_ENDIAN);break;case"int16le":i=this.readInt16(r.LITTLE_ENDIAN);break;case"uint32le":i=this.readUint32(r.LITTLE_ENDIAN);break;case"int32le":i=this.readInt32(r.LITTLE_ENDIAN);break;case"float32le":i=this.readFloat32(r.LITTLE_ENDIAN);break;case"float64le":i=this.readFloat64(r.LITTLE_ENDIAN);break;case"cstring":i=this.readCString(n);break;case"string":i=this.readString(n,s);break;case"u16string":i=this.readUCS2String(n,this.endianness);break;case"u16stringle":i=this.readUCS2String(n,r.LITTLE_ENDIAN);break;case"u16stringbe":i=this.readUCS2String(n,r.BIG_ENDIAN);break;default:if(3===t.length){const n=t[1],s=t[2];let a=0;if(a="function"==typeof s?s(e,this,t):"string"==typeof s&&void 0!==e[s]?parseInt(e[s],10):parseInt(s,10),"string"==typeof n){const t=n.replace(/(le|be)$/,"");let o;switch(/le$/.test(n)?o=r.LITTLE_ENDIAN:/be$/.test(n)&&(o=r.BIG_ENDIAN),"*"===s&&(a=void 0),a=a||0,t){case"uint8":i=this.readUint8Array(a);break;case"uint16":i=this.readUint16Array(a,o);break;case"uint32":i=this.readUint32Array(a,o);break;case"int8":i=this.readInt8Array(a);break;case"int16":i=this.readInt16Array(a,o);break;case"int32":i=this.readInt32Array(a,o);break;case"float32":i=this.readFloat32Array(a,o);break;case"float64":i=this.readFloat64Array(a,o);break;case"cstring":case"utf16string":case"string":if(void 0===a)for(i=[];!this.isEof();){const t=this.readType(n,e);if(void 0===t)break;i.push(t)}else{i=new Array(a);for(let t=0;t<a;t++)i[t]=this.readType(n,e)}}}else if("*"===s)for(i=[];;){const t=this.position;try{const r=this.readType(n,e);if(void 0===r){this.position=t;break}i.push(r)}catch(e){this.position=t;break}}else{a=a||0,i=new Array(a);for(let t=0;t<a;t++){const r=this.readType(n,e);if(void 0===r)return;i[t]=r}}break}}return void 0!==n&&(this.position=a+n),i}writeStruct(t,e,i=!1){i&&(t=r.defWriteStruct(t,e));for(let r=0;r<t.length;r+=2){const i=t[r+1];this.writeType(i,e[t[r]],e)}return this}static defWriteStruct(t,e){const i=[];for(let r=t.length-2;r>=0;r-=2){let n=t[r+1];const s=t[r];if("string"==typeof n&&/,.+:[A-Za-z_]/.test(n)){let t=n.split(":");const r=t[1];t=t[0].split(","),n=t[0];const a=(new TextEncoder).encode(e[s]);e[r]=a.length,i.push((t=>t.writeUint8Array(a)))}else i.push(n);i.push(s)}return i.reverse()}writeType(t,e,i){if("function"==typeof t)return t(this,e,i),this;if("object"==typeof t&&!(t instanceof Array))return t.set(this,e,i),this;let n,s="ASCII";const a=this.position;if("string"==typeof t&&/:/.test(t)){const e=t.split(":");t=e[0];const r=e[1];n=parseInt(void 0!==i[r]?i[r]:r,10)}if("string"==typeof t&&/,/.test(t)){const e=t.split(",");t=e[0],s=e[1]}switch(t){case"uint8":this.writeUint8(e);break;case"int8":this.writeInt8(e);break;case"uint16":this.writeUint16(e,this.endianness);break;case"int16":this.writeInt16(e,this.endianness);break;case"uint32":this.writeUint32(e,this.endianness);break;case"int32":this.writeInt32(e,this.endianness);break;case"float32":this.writeFloat32(e,this.endianness);break;case"float64":this.writeFloat64(e,this.endianness);break;case"uint16be":this.writeUint16(e,r.BIG_ENDIAN);break;case"int16be":this.writeInt16(e,r.BIG_ENDIAN);break;case"uint32be":this.writeUint32(e,r.BIG_ENDIAN);break;case"int32be":this.writeInt32(e,r.BIG_ENDIAN);break;case"float32be":this.writeFloat32(e,r.BIG_ENDIAN);break;case"float64be":this.writeFloat64(e,r.BIG_ENDIAN);break;case"uint16le":this.writeUint16(e,r.LITTLE_ENDIAN);break;case"int16le":this.writeInt16(e,r.LITTLE_ENDIAN);break;case"uint32le":this.writeUint32(e,r.LITTLE_ENDIAN);break;case"int32le":this.writeInt32(e,r.LITTLE_ENDIAN);break;case"float32le":this.writeFloat32(e,r.LITTLE_ENDIAN);break;case"float64le":this.writeFloat64(e,r.LITTLE_ENDIAN);break;case"cstring":this.writeCString(e,n);break;case"string":this.writeString(e,s,n);break;case"u16string":this.writeUCS2String(e,this.endianness,n);break;case"u16stringle":this.writeUCS2String(e,r.LITTLE_ENDIAN,n);break;case"u16stringbe":this.writeUCS2String(e,r.BIG_ENDIAN,n);break;default:if(3===t.length){const r=t[1];for(const t of e)this.writeType(r,t,i);break}this.writeStruct(t,e)}return void 0!==n&&(this.position=a,this._realloc(n),this.position=a+n),this}}r.BIG_ENDIAN=!1,r.LITTLE_ENDIAN=!0,r.endianness=new Int8Array(new Int16Array([1]).buffer)[0]>0;class n extends Error{constructor(){super(...arguments),this.name="IOError"}}var s=THREE.Vector3;const a=[new s(.54946297,-183e-6,-.835518),new s(.00014400001,.54940403,-.83555698),new s(-.54940403,-68000001e-12,-.83555698),new s(106e-6,-.54946297,-.835518),new s(.94900799,.00031599999,-.31525001),new s(-186e-6,.94899702,-.31528401),new s(-.94899702,.00031800001,-.31528401),new s(-447e-6,-.94900799,-.31525001),new s(.95084399,-279e-6,.30967101),new s(202e-6,.95084798,.30965701),new s(-.95084798,-70000002e-12,.30965701),new s(147e-6,-.95084399,.30967101),new s(.55237001,-11e-6,.83359897),new s(19999999e-12,.55238003,.833592),new s(-.55238003,57000001e-12,.83359301),new s(-66000001e-12,-.55237001,.83359897)],o=[new s(.67121398,.19849201,-.714194),new s(.26964301,.58439398,-.76536),new s(-.040546,.096988,-.99445897),new s(-.57242799,-.091913998,-.81478697),new s(-.17140099,-.57270998,-.80163902),new s(.36255699,-.30299899,-.88133103),new s(.81034702,-.34897199,-.470698),new s(.103962,.93867201,-.328767),new s(-.324047,.58766901,-.74137598),new s(-.80086499,.34046099,-.49264699),new s(-.66549802,-.59014702,-.45698899),new s(.314767,-.803002,-.506073),new s(.97262901,.151076,-.17655),new s(.680291,.68423599,-.26272699),new s(-.52007902,.82777703,-.210483),new s(-.96164399,-.179001,-.207847),new s(-.262714,-.937451,-.22840101),new s(.219707,-.97130102,.091124997),new s(.92380798,-.229975,.30608699),new s(-.082488999,.97065997,.225866),new s(-.59179801,.69678998,.40528899),new s(-.92529601,.36660099,.097111002),new s(-.705051,-.68777502,.172828),new s(.7324,-.68036699,-.026304999),new s(.85516202,.37458199,.358311),new s(.47300601,.83648002,.276705),new s(-.097617,.65411198,.750072),new s(-.90412402,-.153725,.39865801),new s(-.211916,-.85808998,.46773201),new s(.50022697,-.67440802,.543091),new s(.584539,-.110249,.80384099),new s(.43737301,.45464399,.77588898),new s(-.042440999,.083318003,.995619),new s(-.59625101,.22013199,.77202803),new s(-.506455,-.39697701,.76544899),new s(.070569001,-.47847399,.87526202)],h=[new s(.45651099,-.073968001,-.88663799),new s(.50769401,.38511699,-.77067),new s(.095431998,.22666401,-.96928602),new s(-.35876599,.54318798,-.75910097),new s(-.361276,.13299499,-.92292601),new s(-.48311701,-.32406601,-.813375),new s(-.018073,-.197559,-.980124),new s(.3211,-.501477,-.80337799),new s(.79949099,.069615997,-.59662998),new s(.390971,.77130598,-.50222403),new s(.080782004,.61448997,-.784778),new s(-.73275,.41143101,-.54203498),new s(-.73525399,.0091019999,-.67773098),new s(-.80249399,-.39490801,-.44727099),new s(-.13413,-.58915502,-.79680902),new s(.71955299,-.37622699,-.58369303),new s(.96687502,.173593,-.187132),new s(.760831,.51910597,-.38944301),new s(-.114642,.87551898,-.46938601),new s(-.53236699,.76885903,-.354177),new s(-.96226698,.024977,-.27095801),new s(-.46738699,-.721986,-.51018202),new s(.058449998,-.85235399,-.51968902),new s(.49823299,-.74374002,-.44566301),new s(.93915099,-.27024499,-.212044),new s(.58393198,.80944198,-.061857),new s(.183797,.97322798,-.138007),new s(-.88435501,.45221901,-.115822),new s(-.943178,-.33206701,.012138),new s(-.69844002,-.70656699,-.113772),new s(-.228411,-.95470601,-.190694),new s(.73156399,-.675861,-.089588001),new s(.96925098,.046804,.24158201),new s(.85564703,.50347698,.119916),new s(-.25115299,.96794701,-80999998e-12),new s(-.64779502,.75674897,.087711997),new s(-.96916401,.14519399,.1991),new s(-.41479301,-.88896698,.194126),new s(.25077501,-.961178,-.115109),new s(.47862899,-.84259301,.246883),new s(.89004397,-.39614201,.225595),new s(.52405101,.76235998,.37970701),new s(.11962,.94548202,.30291),new s(-.76085001,.49007499,.42536199),new s(-.86978501,-.20215,.450122),new s(-.70946699,-.60242403,.36570701),new s(.019308999,-.95887101,.28318599),new s(.626113,-.564677,.53770101),new s(.769943,-.126663,.62541503),new s(.76419097,.35070199,.54131401),new s(-.001878,.74136698,.67109799),new s(-.37088001,.81836802,.43900099),new s(-.71390897,.12865201,.68831801),new s(-.295165,-.73866397,.60601401),new s(.186195,-.73836899,.648184),new s(.387523,-.35878301,.84917599),new s(.481022,.124846,.86777401),new s(.391808,.54505599,.741216),new s(-.0035359999,.36559799,.93076599),new s(-.42049801,.484961,.76680797),new s(-.35490301,.019470001,.93470001),new s(-.54783702,-.35920799,.75554299),new s(-.106662,-.445115,.88909799),new s(.086796001,-.059307002,.99445897)],w=[new s(.52657801,-.35962099,-.77031702),new s(.150482,.43598399,.88728398),new s(.414195,.73825502,-.53237402),new s(.075152002,.91624898,-.393498),new s(-.316149,.93073601,-.18379299),new s(-.77381903,.62333399,-.11251),new s(-.90084201,.42853701,-.069568001),new s(-.99894202,-.010971,.044665001),new s(-.979761,-.15767001,-.123324),new s(-.91127402,-.362371,-.19562),new s(-.62406898,-.72094101,-.301301),new s(-.310173,-.80934501,-.498752),new s(.146613,-.81581903,-.55941403),new s(-.71651602,-.69435602,-.066887997),new s(.50397199,-.114202,-.85613698),new s(.45549101,.87262702,-.176211),new s(-.00501,-.114373,-.99342501),new s(-.104675,-.327701,-.93896502),new s(.56041199,.75258899,-.34575599),new s(-.060575999,.82162797,-.566796),new s(-.30234101,.79700702,-.522847),new s(-.671543,.67074001,-.314863),new s(-.77840102,-.12835699,.61450499),new s(-.92404997,.278382,-.261985),new s(-.69977301,-.55049098,-.45527801),new s(-.56824797,-.51718903,-.64000797),new s(.054097999,-.93286401,-.356143),new s(.75838202,.57289302,-.31088799),new s(.0036200001,.30502599,-.95233703),new s(-.060849998,-.98688602,-.14951099),new s(.63523,.045478001,-.77098298),new s(.52170497,.241309,-.81828701),new s(.26940399,.63542497,-.72364098),new s(.045676,.67275399,-.738455),new s(-.180511,.67465699,-.71571898),new s(-.397131,.63664001,-.66104198),new s(-.55200398,.47251499,-.687038),new s(-.77217001,.08309,-.62996),new s(-.669819,-.119533,-.73284),new s(-.54045498,-.31844401,-.77878201),new s(-.38613501,-.522789,-.75999397),new s(-.261466,-.68856698,-.676395),new s(-.019412,-.69610298,-.71767998),new s(.30356899,-.48184401,-.82199299),new s(.68193901,-.19512901,-.70490003),new s(-.24488901,-.116562,-.96251899),new s(.80075902,-.022979001,-.59854603),new s(-.37027499,.095583998,-.92399102),new s(-.33067101,-.32657799,-.88543999),new s(-.16322,-.52757901,-.83367902),new s(.12639,-.313146,-.941257),new s(.34954801,-.27222601,-.89649802),new s(.23991799,-.085825004,-.96699202),new s(.390845,.081537001,-.91683799),new s(.25526699,.26869699,-.92878503),new s(.146245,.48043799,-.86474901),new s(-.32601601,.47845599,-.81534898),new s(-.46968201,-.112519,-.87563598),new s(.81844002,-.25852001,-.51315099),new s(-.474318,.292238,-.83043301),new s(.778943,.39584199,-.48637101),new s(.62409401,.39377299,-.67487001),new s(.74088597,.203834,-.63995302),new s(.48021701,.565768,-.67029703),new s(.38093001,.42453501,-.82137799),new s(-.093422003,.50112402,-.86031801),new s(-.236485,.29619801,-.92538702),new s(-.131531,.093959004,-.98684901),new s(-.82356203,.29577699,-.48400599),new s(.61106598,-.624304,-.486664),new s(.069495998,-.52033001,-.85113299),new s(.226522,-.66487902,-.711775),new s(.47130799,-.56890398,-.67395699),new s(.38842499,-.74262398,-.54556),new s(.78367501,-.48072901,-.39338499),new s(.962394,.135676,-.235349),new s(.876607,.172034,-.449406),new s(.63340503,.58979303,-.50094098),new s(.182276,.80065799,-.57072097),new s(.177003,.76413399,.62029701),new s(-.544016,.675515,-.49772099),new s(-.67929697,.28646699,-.67564201),new s(-.59039098,.091369003,-.801929),new s(-.82436001,-.13312399,-.55018902),new s(-.71579403,-.33454201,-.61296099),new s(.17428599,-.89248401,.416049),new s(-.082528003,-.83712298,-.54075301),new s(.28333101,-.88087398,-.37918901),new s(.675134,-.42662701,-.60181701),new s(.84372002,-.512335,-.160156),new s(.97730398,-.098555997,-.18752),new s(.846295,.522672,-.102947),new s(.67714101,.72132498,-.145501),new s(.32096499,.87089199,-.37219399),new s(-.178978,.911533,-.37023601),new s(-.44716901,.82670099,-.341474),new s(-.70320302,.496328,-.50908101),new s(-.97718102,.063562997,-.202674),new s(-.87817001,-.412938,.241455),new s(-.83583099,-.35855001,-.415728),new s(-.499174,-.69343299,-.51959199),new s(-.188789,-.92375302,-.33322501),new s(.19225401,-.96936101,-.152896),new s(.51594001,-.783907,-.34539199),new s(.90592498,-.30095199,-.29787099),new s(.99111199,-.127746,.037106998),new s(.99513501,.098424003,-.0043830001),new s(.76012301,.64627701,.067367002),new s(.205221,.95958,-.192591),new s(-.042750001,.97951299,-.19679099),new s(-.43801701,.89892697,.0084920004),new s(-.82199401,.48078501,-.30523899),new s(-.89991701,.081710003,-.42833701),new s(-.92661202,-.144618,-.347096),new s(-.79365999,-.55779201,-.24283899),new s(-.43134999,-.84777898,-.30855799),new s(-.0054919999,-.96499997,.26219299),new s(.58790499,-.80402601,-.088940002),new s(.69949299,-.66768599,-.254765),new s(.88930303,.359795,-.282291),new s(.780972,.197037,.59267199),new s(.52012098,.50669599,.68755698),new s(.40389499,.69396102,.59605998),new s(-.154983,.89923602,.40909001),new s(-.65733802,.53716803,.528543),new s(-.74619502,.33409101,.575827),new s(-.62495202,-.049144,.77911502),new s(.31814101,-.254715,.913185),new s(-.555897,.405294,.725752),new s(-.79443401,.099405997,.59916002),new s(-.64036101,-.68946302,.33849499),new s(-.12671299,-.73409498,.66711998),new s(.105457,-.78081697,.61579502),new s(.40799299,-.48091599,.77605498),new s(.69513601,-.54512,.468647),new s(.97319102,-.0064889998,.229908),new s(.94689399,.317509,-.050799001),new s(.56358302,.82561201,.027183),new s(.325773,.94542301,.0069490001),new s(-.171821,.98509699,-.0078149997),new s(-.67044097,.73993897,.054768998),new s(-.822981,.55496198,.121322),new s(-.96619302,.117857,.229307),new s(-.95376903,-.29470399,.058945),new s(-.86438698,-.50272799,-.010015),new s(-.53060901,-.84200603,-.097365998),new s(-.162618,-.98407501,.071772002),new s(.081446998,-.99601102,.036439002),new s(.74598402,-.66596299,.00076199998),new s(.94205701,-.32926899,-.064106002),new s(.93970197,-.28108999,.194803),new s(.77121401,.55067003,.319363),new s(.641348,.73069,.23402099),new s(.080682002,.99669099,.0098789996),new s(-.046725001,.97664303,.20972501),new s(-.53107601,.82100099,.209562),new s(-.69581503,.65599,.29243499),new s(-.97612202,.216709,-.014913),new s(-.96166098,-.14412899,.23331399),new s(-.772084,-.61364698,.165299),new s(-.44960001,-.83605999,.314426),new s(-.39269999,-.91461599,.096247002),new s(.390589,-.91947001,.044890001),new s(.58252901,-.79919797,.148127),new s(.866431,-.48981199,.096864),new s(.90458697,.111498,.41145),new s(.95353699,.23232999,.191806),new s(.497311,.77080297,.398177),new s(.194066,.95631999,.218611),new s(.422876,.882276,.206797),new s(-.373797,.84956598,.37217399),new s(-.53449702,.71402299,.4522),new s(-.881827,.23716,.40759799),new s(-.904948,-.014069,.42528901),new s(-.751827,-.51281703,.41445801),new s(-.50101501,-.69791698,.51175803),new s(-.23519,-.92592299,.295555),new s(.228983,-.95393997,.193819),new s(.734025,-.63489801,.241062),new s(.91375297,-.063253,-.40131599),new s(.90573502,-.161487,.391875),new s(.85892999,.342446,.38074899),new s(.62448603,.60758102,.49077699),new s(.28926399,.85747898,.42550799),new s(.069968,.90216899,.42567101),new s(-.28617999,.94069999,.182165),new s(-.57401299,.80511898,-.14930899),new s(.111258,.099717997,-.98877603),new s(-.30539301,-.94422799,-.12316),new s(-.60116601,-.78957599,.123163),new s(-.290645,-.81213999,.50591898),new s(-.064920001,-.87716299,.47578499),new s(.408301,-.862216,.29978901),new s(.56609702,-.72556603,.39126399),new s(.83936399,-.427387,.33586901),new s(.81889999,-.041305002,.57244802),new s(.71978402,.41499701,.55649698),new s(.88174403,.45027,.140659),new s(.40182301,-.89822,-.17815199),new s(-.054019999,.79134399,.60898),new s(-.29377401,.76399398,.57446498),new s(-.450798,.61034697,.65135098),new s(-.63822103,.186694,.74687302),new s(-.87287003,-.25712699,.41470799),new s(-.58725703,-.52170998,.618828),new s(-.35365799,-.64197397,.680291),new s(.041648999,-.61127299,.79032302),new s(.348342,-.77918297,.52108699),new s(.499167,-.62244099,.602826),new s(.79001898,-.30383101,.53250003),new s(.66011798,.060733002,.74870199),new s(.60492098,.29416099,.73996001),new s(.38569701,.37934601,.84103203),new s(.239693,.207876,.94833201),new s(.012623,.25853199,.96591997),new s(-.100557,.457147,.88368797),new s(.046967,.62858802,.77631903),new s(-.43039101,-.44540501,.785097),new s(-.43429101,-.196228,.87913901),new s(-.25663701,-.336867,.90590203),new s(-.131372,-.15891001,.97851402),new s(.102379,-.208767,.972592),new s(.195687,-.450129,.87125802),new s(.62731898,-.42314801,.65377098),new s(.68743902,-.171583,.70568198),new s(.27592,-.021255,.96094602),new s(.45936701,.15746599,.87417799),new s(.285395,.583184,.76055598),new s(-.81217402,.46030301,.35846099),new s(-.189068,.64122301,.743698),new s(-.338875,.47648001,.811252),new s(-.92099398,.347186,.176727),new s(.040638998,.024465,.99887401),new s(-.73913199,-.35374701,.57318997),new s(-.60351199,-.28661501,.74405998),new s(-.188676,-.547059,.81555402),new s(-.026045,-.39782,.91709399),new s(.26789701,-.649041,.71202302),new s(.518246,-.28489101,.80638599),new s(.493451,-.066532999,.86722499),new s(-.328188,.140251,.93414301),new s(.328188,.140251,.93414301),new s(-.328188,.140251,.93414301),new s(-.328188,.140251,.93414301),new s(-.328188,.140251,.93414301)];class f{constructor(t,e,i){this.sizeX=t,this.sizeY=e,this.sizeZ=i,this.arr=new Array(t*e*i)}add(t){this.arr[t.x+t.y*this.sizeX+t.z*this.sizeX*this.sizeY]=t}get(t,e,i){if(!(t>=this.sizeX||e>=this.sizeY||i>=this.sizeZ))return this.arr[t+e*this.sizeX+i*this.sizeX*this.sizeY]}}class l{get spanX(){return this.maxBounds.x-this.minBounds.x}get spanY(){return this.maxBounds.y-this.minBounds.y}get spanZ(){return this.maxBounds.z-this.minBounds.z}get scaleX(){return this.spanX/this.sizeX}get scaleY(){return this.spanY/this.sizeY}get scaleZ(){return this.spanZ/this.sizeZ}get scale(){return new THREE.Vector3(this.scaleX,this.scaleY,this.scaleZ)}getAllVoxels(){let t=[],e=new f(this.sizeX+1,this.sizeY+1,this.sizeZ+1);for(let i=0,r=this.spans.length;i<r;i++){let r=this.spans[i].voxels;for(let i=0,n=r.length;i<n;i++){let n=r[i];t.push(n),e.add(n)}}return{voxels:t,voxelField:e}}getNormals(){switch(this.normalsMode){case 1:return a;case 2:return o;case 3:return h;case 4:return w;default:throw new Error(`Invalid normalsmode ${this.normalsMode}`)}}scaleHvaMatrix(t){return(t=t.clone()).elements[12]*=this.hvaMultiplier,t.elements[13]*=this.hvaMultiplier,t.elements[14]*=this.hvaMultiplier,t}toPlain(){return{name:this.name,normalsMode:this.normalsMode,minBounds:this.minBounds.toArray(),maxBounds:this.maxBounds.toArray(),sizeX:this.sizeX,sizeY:this.sizeY,sizeZ:this.sizeZ,hvaMultiplier:this.hvaMultiplier,transfMatrix:this.transfMatrix.toArray(),spans:this.spans}}fromPlain(t){return this.name=t.name,this.normalsMode=t.normalsMode,this.minBounds=(new THREE.Vector3).fromArray(t.minBounds),this.maxBounds=(new THREE.Vector3).fromArray(t.maxBounds),this.sizeX=t.sizeX,this.sizeY=t.sizeY,this.sizeZ=t.sizeZ,this.hvaMultiplier=t.hvaMultiplier,this.transfMatrix=(new THREE.Matrix4).fromArray(t.transfMatrix),this.spans=t.spans,this}}class u{read(t){this.fileName=t.readCString(16),this.paletteCount=t.readUint32(),this.headerCount=t.readUint32(),this.tailerCount=t.readUint32(),this.bodySize=t.readUint32(),this.paletteRemapStart=t.readUint8(),this.paletteRemapEnd=t.readUint8(),t.seek(t.position+768)}}u.size=32;class d{constructor(t){this.voxelCount=0,t instanceof class{constructor(t,e){this.stream=t,this.filename=e}static async fromRealFile(t){try{const e=new r(await t.arrayBuffer());return e._trimAlloc=()=>{},new this(e,t.name)}catch(e){if(e instanceof DOMException)throw new n(`File "${t.name}" could not be read (${e.name})`,{cause:e});throw e}}static fromBytes(t,e){let i=new r(t);return i._trimAlloc=()=>{},new this(i,e)}static factory(t,e,i=0,n=t.byteLength){const s=new DataView(t.buffer,t.byteOffset+i,n),a=new r(s);return a._trimAlloc=()=>{},new this(a,e)}readAsString(t){return this.stream.seek(0),this.stream.readString(this.stream.byteLength,t)}getBytes(){return new Uint8Array(this.stream.buffer,this.stream.byteOffset,this.stream.byteLength)}getSize(){return this.stream.byteLength}asFile(t){return new File([this.getBytes()],this.filename,{type:t})}}&&this.fromVirtualFile(t)}fromVirtualFile(t){this.filename=t.filename;let e=t.stream;if(this.sections=[],e.byteLength<u.size)return;let i=new u;if(i.read(e),!i.headerCount||!i.tailerCount||i.tailerCount!==i.headerCount)return;for(let a=0;a<i.headerCount;++a){const t=new l;this.readSectionHeader(t,e),this.sections.find((e=>e.name===t.name))&&console.warn(`Duplicate section name "${t.name}" found in VXL "${this.filename}".`),this.sections.push(t)}let r=e.position;e.seek(e.position+i.bodySize);let n=[];for(let a=0;a<i.tailerCount;++a)n[a]=this.readSectionTailer(this.sections[a],e);let s=0;for(let a=0;a<i.headerCount;++a)e.seek(r),s+=this.readSectionBodySpans(this.sections[a],n[a],e);this.voxelCount=s}readSectionHeader(t,e){t.name=e.readCString(16),e.readUint32(),e.readUint32(),e.readUint32()}readSectionTailer(t,e){const i=e.readUint32(),r=e.readUint32(),n=e.readUint32();return t.hvaMultiplier=e.readFloat32(),t.transfMatrix=this.readTransfMatrix(e),t.minBounds=new THREE.Vector3(e.readFloat32(),e.readFloat32(),e.readFloat32()),t.maxBounds=new THREE.Vector3(e.readFloat32(),e.readFloat32(),e.readFloat32()),t.sizeX=e.readUint8(),t.sizeY=e.readUint8(),t.sizeZ=e.readUint8(),t.normalsMode=e.readUint8(),{startingSpanOffset:i,endingSpanOffset:r,dataSpanOffset:n}}readTransfMatrix(t){let e=[];for(let i=0;i<3;++i)e.push(t.readFloat32(),t.readFloat32(),t.readFloat32(),t.readFloat32());return e.push(0,0,0,1),(new THREE.Matrix4).fromArray(e).transpose()}readSectionBodySpans(t,e,i){i.seek(i.position+e.startingSpanOffset);let{sizeX:r,sizeY:n,sizeZ:s}=t,a=new Array(n);for(let f=0;f<n;++f){a[f]=new Array(r);for(let t=0;t<r;++t)a[f][t]=i.readInt32()}let o=new Array(n);for(let f=0;f<n;++f){o[f]=new Array(r);for(let t=0;t<r;++t)o[f][t]=i.readInt32()}let h=t.spans=[],w=0;for(let f=0;f<n;++f)for(let t=0;t<r;++t){let e={x:t,y:f,voxels:this.readSpanVoxels(a[f][t],o[f][t],t,f,s,i)};h.push(e),w+=e.voxels.length}return w}readSpanVoxels(t,e,i,r,n,s){if(-1===t||-1===e)return[];let a=[];for(let o=0;o<n;){o+=s.readUint8();let t=s.readUint8();for(let e=0;e<t;++e){let t={x:i,y:r,z:o++,colorIndex:s.readUint8(),normalIndex:s.readUint8()};a.push(t)}s.readUint8()}return a}fromPlain(t){return this.sections=t.sections.map((t=>(new l).fromPlain(t))),this.voxelCount=t.voxelCount,this}toPlain(){return{sections:this.sections.map((t=>t.toPlain())),voxelCount:this.voxelCount}}getSection(t){return this.sections[t]}}var c;!function(t){t[t.Low=0]="Low",t[t.High=1]="High"}(c||(c={}));class y{build(t,e=!1){let{voxelField:i}=t.getAllVoxels();const r=e?(t,e,r)=>{let n=i.get(t,e,r);return n?n.colorIndex:0}:(t,e,r)=>{let n=i.get(t,e,r);return n?n.normalIndex+256*n.colorIndex:0};let{vertices:n,faces:s}=function(t,e){for(var i=[],r=[],n=0;n<3;++n){var s=(n+1)%3,a=(n+2)%3,o=new Int32Array(3),h=new Int32Array(3),w=new Int32Array(2*(e[s]+1)),f=new Int32Array(e[s]),l=new Int32Array(e[s]),u=new Int32Array(2*e[a]),d=new Int32Array(2*e[a]),c=new Int32Array(24*e[a]),y=[[0,0],[0,0]];for(h[n]=1,o[n]=-1;o[n]<e[n];){var p=[],g=0;for(o[a]=0;o[a]<e[a];++o[a]){var E=0,m=0,A=0;for(o[s]=0;o[s]<e[s];++o[s],m=A){var _=0<=o[n]?t(o[0],o[1],o[2]):0,I=o[n]<e[n]-1?t(o[0]+h[0],o[1]+h[1],o[2]+h[2]):0;A=_,!_==!I?A=0:_||(A=-I),m!==A&&(w[E++]=o[s],w[E++]=A)}w[E++]=e[s],w[E++]=0;for(var U=0,T=0,v=0;T<g&&v<E-2;){let t=p[f[T]];var L=t.left[t.left.length-1][0],N=t.right[t.right.length-1][0],B=t.color,S=w[v],k=w[v+2],z=w[v+1];if(k>L&&N>S&&z===B)t.merge_run(o[a],S,k),l[U++]=f[T],++T,v+=2;else{if(k<=N){if(z){var x=new b(z,o[a],S,k);l[U++]=p.length,p.push(x)}v+=2}N<=k&&(t.close_off(o[a]),++T)}}for(;T<g;++T)p[f[T]].close_off(o[a]);for(;v<E-2;v+=2)S=w[v],k=w[v+2],(z=w[v+1])&&(x=new b(z,o[a],S,k),l[U++]=p.length,p.push(x));var O=l;l=f,f=O,g=U}for(T=0;T<g;++T)p[f[T]].close_off(e[a]);for(o[n]++,T=0;T<p.length;++T){let t=p[T];var F=!1;for((A=t.color)<0&&(F=!0,A=-A),v=0;v<t.left.length;++v){u[v]=i.length;var V=[0,0,0],M=t.left[v];V[n]=o[n],V[s]=M[0],V[a]=M[1],i.push({position:V,value:A})}for(v=0;v<t.right.length;++v)d[v]=i.length,V=[0,0,0],M=t.right[v],V[n]=o[n],V[s]=M[0],V[a]=M[1],i.push({position:V,value:A});var C=0,R=0,D=1,Y=1,G=!0;for(c[R++]=u[0],c[R++]=t.left[0][0],c[R++]=t.left[0][1],c[R++]=d[0],c[R++]=t.right[0][0],c[R++]=t.right[0][1];D<t.left.length||Y<t.right.length;){var P=!1;if(D===t.left.length)P=!0;else if(Y!==t.right.length){var H=t.left[D],X=t.right[Y];P=H[1]>X[1]}var Z=P?d[Y]:u[D],j=P?t.right[Y]:t.left[D];if(P!==G)for(;C+3<R;)F===P?r.push([c[C],c[C+3],Z]):r.push([c[C+3],c[C],Z]),C+=3;else for(;C+3<R;){for(v=0;v<2;++v)for(var $=0;$<2;++$)y[v][$]=c[R-3*(v+1)+$+1]-j[$];var W=y[0][0]*y[1][1]-y[1][0]*y[0][1];if(P===W>0)break;0!==W&&(F===P?r.push([c[R-3],c[R-6],Z]):r.push([c[R-6],c[R-3],Z])),R-=3}c[R++]=Z,c[R++]=j[0],c[R++]=j[1],P?++Y:++D,G=P}}}}return{vertices:i,faces:r}}(r,[t.sizeX,t.sizeY,t.sizeZ]),a=t.minBounds,o=t.scale,h=t.getNormals(),w=new Float32Array(3*n.length),f=new Float32Array(3*n.length),l=new Float32Array(3*n.length),u=0,d=0,c=0;for(let b=0,E=n.length;b<E;b++){let t=n[b],i=e?t.value:t.value/256|0;if(w[u++]=a.x+t.position[0]*o.x,w[u++]=a.y+t.position[1]*o.y,w[u++]=a.z+t.position[2]*o.z,l[c++]=i/255,l[c++]=0,l[c++]=0,!e){let e=t.value%256,i=h[Math.min(e,h.length-1)];f[d++]=i.x,f[d++]=i.y,f[d++]=i.z}}let y=new Uint32Array(3*s.length),p=0;for(let b=0,E=s.length;b<E;b++){let t=s[b];y[p++]=t[0],y[p++]=t[1],y[p++]=t[2]}let g=new THREE.BufferGeometry;return g.addAttribute("position",new THREE.BufferAttribute(w,3)),e||g.addAttribute("normal",new THREE.BufferAttribute(f,3)),g.addAttribute("color",new THREE.BufferAttribute(l,3)),g.setIndex(new THREE.BufferAttribute(y,1)),g=class{static mergeVertices(t,e=1e-4){e=Math.max(e,Number.EPSILON);const i={},r=t.getIndex(),n=t.getAttribute("position"),s=r?r.count:n.count;let a=0;const o=Object.keys(t.attributes),h={},w={},f=[],l=[(t,e)=>t.getX(e),(t,e)=>t.getY(e),(t,e)=>t.getZ(e),(t,e)=>t.getW(e)];for(let y=0,b=o.length;y<b;y++){const e=o[y];h[e]=[];const i=t.morphAttributes[e];i&&(w[e]=new Array(i.length).fill(void 0).map((()=>[])))}const u=Math.log10(1/e),d=Math.pow(10,u);for(let y=0;y<s;y++){const e=r?r.getX(y):y;let n="";for(let i=0,r=o.length;i<r;i++){const r=o[i],s=t.getAttribute(r),a=s.itemSize;for(let t=0;t<a;t++)n+=~~(l[t](s,e)*d)+","}if(n in i)f.push(i[n]);else{for(let i=0,r=o.length;i<r;i++){const r=o[i],n=t.getAttribute(r),s=t.morphAttributes[r],a=n.itemSize,f=h[r],u=w[r];for(let t=0;t<a;t++){const i=l[t];if(f.push(i(n,e)),s)for(let t=0,r=s.length;t<r;t++)u[t].push(i(s[t],e))}}i[n]=a,f.push(a),a++}}const c=t.clone();for(let y=0,b=o.length;y<b;y++){const e=o[y],i=t.getAttribute(e),r=new i.array.constructor(h[e]),n=new THREE.BufferAttribute(r,i.itemSize,i.normalized);if(c.addAttribute(e,n),e in w)for(let s=0;s<w[e].length;s++){const i=t.morphAttributes[e][s],r=new i.array.constructor(w[e][s]),n=new THREE.BufferAttribute(r,i.itemSize,i.normalized);c.morphAttributes[e][s]=n}}return c.setIndex(new THREE.BufferAttribute(new Uint32Array(f),1)),c}static mergeBufferGeometries(t,e=!1){const i=null!==t[0].index,r=new Set(Object.keys(t[0].attributes)),n={},s=new THREE.BufferGeometry;let a=0;for(let o=0;o<t.length;++o){const h=t[o];let w=0;if(i!==(null!==h.index))throw new Error("mergeBufferGeometries() failed with geometry at index "+o+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.");if(Object.keys(h.morphAttributes).length)throw new Error("mergeBufferGeometries() failed with geometry at index "+o+". Morph attributes are not supported");for(const t in h.attributes){if(!r.has(t))throw new Error("mergeBufferGeometries() failed with geometry at index "+o+'. All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.');void 0===n[t]&&(n[t]=[]),n[t].push(h.attributes[t]),w++}if(w!==r.size)throw new Error("mergeBufferGeometries() failed with geometry at index "+o+". Make sure all geometries have the same number of attributes.");if(e){let t;if(i)t=h.index.count;else{if(void 0===h.attributes.position)throw new Error("mergeBufferGeometries() failed with geometry at index "+o+". The geometry must have either an index or a position attribute");t=h.attributes.position.count}s.addGroup(a,t,o),a+=t}}if(i){let e=0;const i=[];for(let r=0;r<t.length;++r){const n=t[r].index;for(let t=0;t<n.count;++t)i.push(n.getX(t)+e);e+=t[r].attributes.position.count}s.setIndex(new THREE.BufferAttribute(new(i.length>65535?Uint32Array:Uint16Array)(i),1))}for(const o in n){const t=this.mergeBufferAttributes(n[o]);if(!t)throw new Error("mergeBufferGeometries() failed while trying to merge the "+o+" attribute.");s.addAttribute(o,t)}return s}static mergeBufferAttributes(t){let e,i,r,n=0;for(let o=0;o<t.length;++o){const s=t[o];if(s.isInterleavedBufferAttribute)throw new Error("mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported.");if(void 0===e&&(e=s.array.constructor),e!==s.array.constructor)throw new Error("mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.");if(void 0===i&&(i=s.itemSize),i!==s.itemSize)throw new Error("mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.");if(void 0===r&&(r=s.normalized),r!==s.normalized)throw new Error("mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.");n+=s.array.length}const s=new e(n);let a=0;for(let o=0;o<t.length;++o)s.set(t[o].array,a),a+=t[o].array.length;return new THREE.BufferAttribute(s,i,r)}}.mergeVertices(g),g.computeBoundingBox(),e&&g.computeVertexNormals(),g}}class b{constructor(t,e,i,r){this.color=t,this.left=[[i,e]],this.right=[[r,e]]}close_off(t){this.left.push([this.left[this.left.length-1][0],t]),this.right.push([this.right[this.right.length-1][0],t])}merge_run(t,e,i){var r=this.left[this.left.length-1][0],n=this.right[this.right.length-1][0];r!==e&&(this.left.push([r,t]),this.left.push([e,t])),n!==i&&(this.right.push([n,t]),this.right.push([i,t]))}}class p{serialize(t){if(Object.keys(t.morphAttributes).length)throw new Error("Morph attributes are not supported");if(t.groups.length>1)throw new Error("Groups are not supported");let e=Object.keys(t.attributes),i=t.index,n=1+22*e.length+Object.values(t.attributes).map((t=>this.getTypedArrayByteSize(t.array))).reduce(((t,e)=>t+e),0)+1+(i?this.getTypedArrayByteSize(i.array):0),s=new r(new ArrayBuffer(n));s.writeUint8(e.length);for(let r of e){let e=t.getAttribute(r);s.writeCString(r,20),s.writeUint8(e.itemSize),s.writeUint8(Number(e.normalized)),this.writeTypedArray(s,e.array)}return s.writeUint8(Number(Boolean(i))),i&&this.writeTypedArray(s,i.array),s.seek(0),s.dynamicSize=!1,s.buffer}unserialize(t){let e=new THREE.BufferGeometry,i=t.readUint8();for(let r=0;r<i;r++){let i=t.readCString(20),r=t.readUint8(),n=Boolean(t.readUint8()),s=this.readTypedArray(t),a=new THREE.BufferAttribute(s,r,n);e.addAttribute(i,a)}if(Boolean(t.readUint8())){let i=this.readTypedArray(t);e.setIndex(new THREE.BufferAttribute(i,1))}return e}writeTypedArray(t,e){if(t.writeUint32(e.length),e instanceof Float32Array)t.writeUint8(0),t.writeFloat32Array(e);else if(e instanceof Uint32Array)t.writeUint8(1),t.writeUint32Array(e);else{if(!(e instanceof Uint16Array))throw new Error(`Unsupported array type "${e.constructor.name}"`);t.writeUint8(2),t.writeUint16Array(e)}}readTypedArray(t){let e=t.readUint32(),i=t.readUint8();switch(i){case 0:return t.readFloat32Array(e);case 1:return t.readUint32Array(e);case 2:return t.readUint16Array(e);default:throw new Error(`Unsupported array type "${i}"`)}}getTypedArrayByteSize(t){return 5+t.BYTES_PER_ELEMENT*t.length}}async function g(t,e){let i=(new d).fromPlain(t),r=[];for(let n of i.sections){let t=(new y).build(n,e===c.Low),i=(new p).serialize(t);r.push(i)}return r}}}]);